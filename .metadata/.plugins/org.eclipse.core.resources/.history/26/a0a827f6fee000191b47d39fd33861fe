package com.biswa.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;

@Configuration
public class SpringSecurityConfig extends WebSecurityConfigurerAdapter {
	@Override
	protected void configure(AuthenticationManagerBuilder auth) throws Exception {
		auth.inMemoryAuthentication().withUser("admin1").password(encoder().encode("admin1")).roles("ADMIN").and()
				.withUser("biswa").password(encoder().encode("biswa")).roles("USER").and().withUser("biswa")
				.password(encoder().encode("biswa")).roles("USER");
	}

	@Bean
	public PasswordEncoder encoder() {
		return new BCryptPasswordEncoder();
	}

	// Authorization : Role -> Access
	protected void configure(HttpSecurity http) throws Exception {
		http.httpBasic().and().authorizeRequests().antMatchers("/getAllEmployee").hasRole("USER")
				.antMatchers("/stocks").hasRole("ADMIN").antMatchers("/").hasRole("USER").and().csrf().disable()
				.headers().frameOptions().disable();
	}
}
///stocks